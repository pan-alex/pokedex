:root {
  --panelMinHeight: 320px;
  --panelMaxHeight: 800px;
  --panelMinWidth: 300px;
  --panelMaxWidth: 1100px;
  --screenMaxHeight: 700px;
  --fontPrim: #c1c1c1;
  --fontAccent: #35cf9c;
  --pokered: rgb(232, 72, 72);
  --screenbg: #272727;
  --screenbggrid: white;
  --screenaccent: hsl(160, 100%, 40%);
  --screenglare: hsla(160, 70%, 25%, 0.85);
  --screenglare2: hsl(160, 100%, 25%);
}

html, body, div, span, applet, object,
iframe, h1, h2, h3, h4, h5, h6, p, blockquote,
pre, a, abbr, acronym, address, big, cite,
code, del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var, b,
u, i, center, dl, dt, dd, ol, ul, li, fieldset,
form, label, legend, table, caption, tbody,
tfoot, thead, tr, th, td, article, aside,
canvas, details, embed, figure, figcaption,
footer, header, hgroup, menu, nav, output, ruby,
section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}
blockquote:before, blockquote:after, q:before, q:after {
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

body {
  -webkit-text-size-adjust: none;
}

mark {
  background-color: transparent;
  color: inherit;
}

input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input, select, textarea {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
}

* {
  box-sizing: border-box;
}

body {
  font-family: "Courier New", Courier, monospace;
  color: var(--fontPrim);
}

input {
  font-family: "Courier New", Courier, monospace;
  color: var(--fontPrim);
}

@media (max-width: 500px) {
  a, p, li {
    font-size: 0.8rem;
  }
}
.screen {
  position: relative;
  min-height: 50px;
  border: 2px solid black;
  background-color: var(--screenbg);
}

.screen::before {
  position: absolute;
  content: "";
  inset: 0;
  display: block;
  opacity: 0.25;
  background-image: linear-gradient(135deg, var(--screenglare) 25%, rgba(0, 0, 0, 0) 25%), linear-gradient(225deg, var(--screenglare) 25%, rgba(0, 0, 0, 0) 25%), linear-gradient(45deg, var(--screenglare) 25%, rgba(0, 0, 0, 0) 25%), linear-gradient(315deg, var(--screenglare) 25%, var(--screenglare2) 25%);
  background-position: 10px 0, 10px 0, 0 0, 0 0;
  background-size: 10px 10px;
  background-repeat: repeat;
  pointer-events: none;
  z-index: 4;
}

.screenMain .screenLeft {
  border-right: 1px solid black;
  border-bottom: 2px solid black;
}
.screenMain .screenLeft .imgHolder {
  border-bottom: 1px solid black;
}
.screenMain .screenRight {
  border-left: 1px solid black;
  border-bottom: 2px solid black;
}
.screenMain .screenRight .screenRightTop {
  border-bottom: 1px solid black;
}

.imgHolder::before {
  position: absolute;
  content: "";
  inset: 0;
  display: block;
  opacity: 0.1;
  background-image: linear-gradient(var(--screenbggrid) 1px, transparent 1px), linear-gradient(90deg, var(--screenbggrid) 1px, var(--screenbg) 1px);
  background-size: 10px 10px, 10px 10px;
  background-position: 1px 1px, 1px 1px;
  z-index: 2;
}

#pokeImage {
  height: 100%;
  max-width: 100%;
  position: relative;
  z-index: 3;
  -o-object-fit: contain;
     object-fit: contain;
}

.basicInfo {
  height: 100%;
}

.typeImgHolder {
  flex-wrap: nowrap;
  padding-top: 5px;
  padding-bottom: 5px;
}

img.type {
  position: relative;
  height: 10vh;
  max-height: 62px;
  filter: brightness(80%);
}
img.type + img {
  padding-left: 5px;
}

.screenRightTop {
  position: relative;
}
.screenRightTop .battery {
  display: none;
}
.screenRightTop td + td {
  padding-left: 0.5rem;
}
.screenRightTop #pokeStatHp {
  color: hsl(300deg, 57%, 60%);
}
.screenRightTop #pokeStatAtk {
  color: hsl(5deg, 66%, 57%);
}
.screenRightTop #pokeStatDef {
  color: hsl(39deg, 97%, 50%);
}
.screenRightTop #pokeStatSpAtk {
  color: hsl(197deg, 100%, 50%);
}
.screenRightTop #pokeStatSpDef {
  color: hsl(120deg, 54%, 50%);
}
.screenRightTop #pokeStatSpeed {
  color: hsl(350deg, 100%, 88%);
}

li {
  padding: 1px;
  cursor: pointer;
}

li:hover {
  border: 1px solid var(--fontAccent);
  padding: 0;
  color: var(--fontAccent);
}

@media (min-width: 500px) {
  .screenRightTop .battery {
    display: block;
    position: absolute;
    top: 5px;
    right: 10px;
  }
}
button {
  background-color: grey;
  width: 45px;
  border: 1px solid black;
}

button:hover {
  filter: brightness(150%);
}

button.circular {
  width: 45px;
  height: 45px;
  border-radius: 50%;
}

button.blue {
  background-color: cornflowerblue;
}

button.red {
  background-color: darkred;
}

@media (max-height: 500px), (max-width: 500px) {
  button.circular {
    width: 35px;
    height: 35px;
  }
}
#query {
  position: absolute;
  display: block;
  border: none;
  border-radius: 5px;
  height: 75%;
  background: var(--screenbg);
  filter: brightness(200%);
}
#query:focus {
  outline: none;
  background: rgba(128, 128, 128, 0.3);
}

.flex-rl {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-inline: 2.5%;
}

.panel {
  margin: 0 auto;
  background: var(--pokered);
  border: 2px solid black;
  border-radius: 0;
  height: 100vh;
  max-height: var(--panelMaxHeight);
  min-height: var(--panelMinHeight);
  max-width: var(--panelMaxWidth);
  min-width: var(--panelMinWidth);
}

.screenFrame {
  margin: 2.5vh;
  margin-bottom: 0;
  height: 80vh;
  max-height: calc(var(--panelMaxHeight) * 0.8);
  min-height: calc(var(--panelMinHeight) * 0.8);
  display: grid;
  place-items: center;
}
.screenFrame .mainDisplay {
  width: 92%;
  height: 70vh;
  max-height: calc(var(--panelMaxHeight) * 0.7);
  min-height: calc(var(--panelMinHeight) * 0.7);
}
.screenFrame .mainDisplay .screenMain {
  height: 56vh;
  max-height: calc(var(--panelMaxHeight) * 0.7 * 0.8);
  min-height: calc(var(--panelMinHeight) * 0.7 * 0.8);
}
.screenFrame .mainDisplay .screenMain > .screenRight .screenRightTop {
  height: 22.4vh;
  max-height: calc(var(--panelMaxHeight) * 0.7 * 0.8 * 0.4);
  min-height: calc(var(--panelMinHeight) * 0.7 * 0.8 * 0.4);
}
.screenFrame .mainDisplay .screenMain > .screenRight .screenRightBot {
  height: 33.6vh;
  max-height: calc(var(--panelMaxHeight) * 0.7 * 0.8 * 0.6);
  min-height: calc(var(--panelMinHeight) * 0.7 * 0.8 * 0.6);
}
.screenFrame .mainDisplay .screenBot {
  height: 14vh;
  max-height: calc(var(--panelMaxHeight) * 0.7 * 0.2);
  min-height: calc(var(--panelMinHeight) * 0.7 * 0.2);
}

.panelBottom {
  height: 20vh;
  max-height: calc(var(--panelMaxHeight) * 0.2);
  min-height: calc(var(--panelMinHeight) * 0.2);
}

.buttonRow .screen {
  margin-top: 10px;
}

@media screen and (min-width: 1100px) {
  .panel {
    border-radius: 25px;
  }
}
.screenFrame {
  position: relative;
  border: 2px solid black;
  border-radius: 15px;
  background: rgb(238, 238, 238);
}

.mainDisplay .screenMain {
  display: grid;
  grid-template-columns: 1fr 1fr;
}
.mainDisplay .screenMain > .screenLeft {
  height: 100%;
  display: grid;
}
.mainDisplay .screenMain > .screenLeft > .imgHolder {
  position: relative;
  display: grid;
  place-items: center;
}
.mainDisplay .screenMain > .screenRight {
  height: 100%;
  display: grid;
  grid-template-rows: 0.3fr 0.7fr;
}
.mainDisplay .screenMain > .screenRight .screenRightTop {
  overflow: auto;
  scrollbar-width: thin;
  scrollbar-width: 12px;
  scrollbar-gutter: stable;
  scrollbar-color: var(--screenaccent);
  /* scroll thumb and track */
}
.mainDisplay .screenMain > .screenRight .screenRightBot {
  overflow: auto;
  scrollbar-width: thin;
  scrollbar-width: 12px;
  scrollbar-gutter: stable;
  scrollbar-color: var(--screenaccent);
  /* scroll thumb and track */
}
.mainDisplay .screenBot {
  display: flex;
  align-items: center;
  position: relative;
  padding: 2px;
}

@media only screen and (max-width: 500px) and (orientation: portrait) {
  .basicInfo {
    flex-direction: column;
  }
}/*# sourceMappingURL=main.css.map */